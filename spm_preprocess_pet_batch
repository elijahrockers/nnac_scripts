#!/bin/bash

usage(){
    echo "USAGE:"
    echo "spm_preprocess_pet_batch <subjects-file> <source-file> <ref-file>"; 
    echo ""
    echo "DESCRIPTION:"
    echo "Performs standard SPM preprocessing on many subjects. It assumes"
    echo "the current directory contains each subject's directory."
    echo "Within each subject's directory, it will look for both <ref-file>"
    echo "and <source-file>. So, make sure they exist, yo."
    echo ""
    echo "EXAMPLE:"
    echo "spm_preprocess_pet_batch my_subjects.lst mri.nii pet.nii" 
    echo ""
    echo "EXAMPLE 2 (run 5 jobs at once)"
    echo "spm_preprocess_pet_batch -n 5 my_subjects.lst mri.nii pet.nii"
    echo ""
    exit 0;
}

if [[ "$1" == '--help' ]]; then
    usage;
fi

if [ $# -lt 3 ]; then
    usage;
fi

NUM_JOBS=1
curdir=$(readlink -f $(dirname $0))

# check for special arg(s)
while getopts "n: h " o ; do
    case $o in
	 n ) NUM_JOBS=$OPTARG;;
	 h ) usage;
	     exit 0;;
    esac
done

# positional arguments
SUBJECTS_FILE=${@:$OPTIND:1}
SOURCE_FILE=${@:$OPTIND+1:1}
REF_FILE=${@:$OPTIND+2:1}

# check for subject file existence
if [[ ! -r $SUBJECTS_FILE ]]; then
    echo "Error - subject's file cannot be read: $SUBJECTS_FILE";
    exit 1;
fi

# count subjects
NUM_SUBS=$(cat $SUBJECTS_FILE | wc -w)

# sanity check
if [[ $NUM_JOBS -gt $NUM_SUBS ]]; then
    echo "Error - number of jobs is great than number of subjects"
    exit 1;
fi

# check that ref and source files exist
for s in $(cat $SUBJECTS_FILE); do
    if [[ ! -d $(pwd)/$s ]]; then
        echo "Error - Cannot find subject's directory:"
        echo "        $pwd/$s"
        echo 1;
    elif [[ ! -r $s/$REF_FILE ]]; then
        echo "Error - Cannot find reference file for subject '$s'."
        echo "        File: $(pwd)/$s/$REF_FILE"
        exit 1;
    elif [[ ! -r $s/$SOURCE_FILE ]]; then
        echo "Error - Cannot find source file for subject '$s'."
        echo "        File: $(pwd)/$s/$REF_FILE"
        exit 1;
    fi
done

# check for Matlab
if [[ "$(which matlab)" == "" ]]; then
    echo "Error - Cannot find Matlab. Are you on the right machine?"
    exit 1;
fi

# process function
run(){
    # spm_preprocess_pet_batch.m is a matlab script file located in 
    # the shared matlab directory, at the time of writing: 
    # /space/nnac/pubs/matlab/
    subject_file=$(readlink -f $1)

    CMD="addpath $curdir/matlab; spm_preprocess_pet_batch('$subject_file','$SOURCE_FILE','$REF_FILE'); exit;"
    echo "RUNNING MATLAB COMMAND:"
    echo $CMD
    echo "============================================="
    matlab -nojvm -nodisplay -nosplash -r "$CMD"
}

# run le jobs
if [[ $NUM_JOBS -gt 1 ]]; then
    # count subs
    nsubs_perjob=$(echo "$NUM_SUBS/$NUM_JOBS + 1" | bc)

    # ensure subject file is split by newlines
    allsubs=$(mktemp)
    cat $SUBJECTS_FILE | xargs -n 1 echo > $allsubs

    # split into NUM_JOBS
    splitsubs=$(mktemp)
    split -d -l $nsubs_perjob $allsubs ${splitsubs}_
    for subs in ${splitsubs}_*; do
        # run da job (thread)
        log=$(mktemp)
        echo " === Running preprocessing job === "
        echo "   Subject file: $subs"
        echo "   Log file    : $log"
        echo ""
        (run $subs) &> $log &
    done
    echo "waiting for all preprocessing jobs to complete..."
    wait
    rm ${splitsubs}_*

else
    # if single job, just run directly in terminal
    log=$(mktemp)
    echo "running SPM preprocessing directly in terminal..."
    echo "log file: $log"
    run $SUBJECTS_FILE $(mktemp) | tee $log
    echo "log file: $log"
fi

echo "============================================="
echo "Preprocessing is (probably) complete!"
echo "Temporary log file saved: $templog"
echo "============================================="

